{"version":3,"sources":["Feedback/Feedback.module.css","Feedback/FeedbackOptions.js","Feedback/Statistics.js","Feedback/Section.js","Feedback/Notification.js","Feedback/Feedback.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","onGoodClick","onNeutralClick","onBadClick","className","s","OptionsContainer","type","onClick","OptionBtn","Statistics","good","neutral","bad","total","positiveFeedback","Section","title","children","Notification","message","Feedback","state","props","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","defaultProps","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,UAAY,4BAA4B,aAAe,iC,gLCiB1DC,EAdS,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,eAAgBC,EAAhC,EAAgCA,WAAhC,OACtB,sBAAKC,UAAWC,IAAEC,iBAAlB,UACE,wBAAQC,KAAK,SAASC,QAASP,EAAaG,UAAWC,IAAEI,UAAzD,kBAGA,wBAAQF,KAAK,SAASC,QAASN,EAAgBE,UAAWC,IAAEI,UAA5D,qBAGA,wBAAQF,KAAK,SAASC,QAASL,EAAYC,UAAWC,IAAEI,UAAxD,qBCDWC,EAVI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,iBAA9B,OACjB,gCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,SCCZC,EANC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,oCACGD,GAAS,6BAAKA,IADjB,IAC+BC,MCGlBC,EAJM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mBAAGhB,UAAWC,IAAEc,aAAhB,SAA+BC,KCE3BC,E,4MAOJC,MAAQ,CACNX,KAAM,EAAKY,MAAMZ,KACjBC,QAAS,EAAKW,MAAMX,QACpBC,IAAK,EAAKU,MAAMV,K,EAGlBZ,YAAc,WACZ,EAAKuB,UAAS,SAACC,GAAD,MAAgB,CAC5Bd,KAAMc,EAAUd,KAAO,O,EAI3BT,eAAiB,WACf,EAAKsB,UAAS,SAACC,GAAD,MAAgB,CAC5Bb,QAASa,EAAUb,QAAU,O,EAIjCT,WAAa,WACX,EAAKqB,UAAS,SAACC,GAAD,MAAgB,CAC5BZ,IAAKY,EAAUZ,IAAM,O,EAGzBa,mBAAqB,WACnB,MAA+B,EAAKJ,MAGpC,OAHA,EAAQX,KAAR,EAAcC,QAAd,EAAuBC,K,EAMzBc,gCAAkC,WAIhC,OAHyBC,KAAKC,MAC3B,EAAKP,MAAMX,KAAO,EAAKe,qBAAwB,M,4CAKpD,WACE,MAA+BI,KAAKR,MAA5BX,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,gCACE,cAAC,EAAD,CAASI,MAAO,wBAAhB,SACE,cAAC,EAAD,CACEhB,YAAa6B,KAAK7B,YAClBC,eAAgB4B,KAAK5B,eACrBC,WAAY2B,KAAK3B,eAGpB2B,KAAKJ,qBAAuB,EAC3B,cAAC,EAAD,CAAST,MAAO,aAAhB,SACE,cAAC,EAAD,CACEN,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOgB,KAAKJ,qBACZX,iBACEe,KAAKH,kCAAoC,EACrCG,KAAKH,kCAAoC,IACzC,OAKV,cAAC,EAAD,CAAcP,QAAS,gC,GAtEVW,aAAjBV,EACGW,aAAe,CACpBrB,KAAM,EACNC,QAAS,EACTC,IAAK,GAwEMQ,Q,MCvEAY,MAPf,WACE,OACE,8BACE,cAAC,EAAD,OCFNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cdb28237.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"OptionBtn\":\"Feedback_OptionBtn__2-3Aq\",\"Notification\":\"Feedback_Notification__1Z6Cd\"};","import PropTypes from \"prop-types\";\r\n\r\nimport s from \"./Feedback.module.css\";\r\n\r\nconst FeedbackOptions = ({ onGoodClick, onNeutralClick, onBadClick }) => (\r\n  <div className={s.OptionsContainer}>\r\n    <button type=\"button\" onClick={onGoodClick} className={s.OptionBtn}>\r\n      Good\r\n    </button>\r\n    <button type=\"button\" onClick={onNeutralClick} className={s.OptionBtn}>\r\n      Neutral\r\n    </button>\r\n    <button type=\"button\" onClick={onBadClick} className={s.OptionBtn}>\r\n      Bad\r\n    </button>\r\n  </div>\r\n);\r\n\r\nexport default FeedbackOptions;\r\nFeedbackOptions.propTypes = {\r\n  onGoodClick: PropTypes.func.isRequired,\r\n  onNeutralClick: PropTypes.func.isRequired,\r\n  onBadClick: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nconst Statistics = ({ good, neutral, bad, total, positiveFeedback }) => (\r\n  <div>\r\n    <p>Good: {good}</p>\r\n    <p>Neutral: {neutral}</p>\r\n    <p>Bad: {bad}</p>\r\n    <p>Total: {total}</p>\r\n    <p>Positive feedback: {positiveFeedback}</p>\r\n  </div>\r\n);\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positiveFeedback: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section>\r\n    {title && <h2>{title}</h2>} {children}\r\n  </section>\r\n);\r\n\r\nexport default Section;\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Feedback.module.css\";\r\n\r\nconst Notification = ({ message }) => (\r\n  <p className={s.Notification}>{message}</p>\r\n);\r\n\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport FeedbackOptions from \"./FeedbackOptions.js\";\r\nimport Statistics from \"./Statistics.js\";\r\nimport Section from \"./Section.js\";\r\nimport Notification from \"./Notification.js\";\r\n\r\nclass Feedback extends Component {\r\n  static defaultProps = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  state = {\r\n    good: this.props.good,\r\n    neutral: this.props.neutral,\r\n    bad: this.props.bad,\r\n  };\r\n\r\n  onGoodClick = () => {\r\n    this.setState((prevState) => ({\r\n      good: prevState.good + 1,\r\n    }));\r\n  };\r\n\r\n  onNeutralClick = () => {\r\n    this.setState((prevState) => ({\r\n      neutral: prevState.neutral + 1,\r\n    }));\r\n  };\r\n\r\n  onBadClick = () => {\r\n    this.setState((prevState) => ({\r\n      bad: prevState.bad + 1,\r\n    }));\r\n  };\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = good + neutral + bad;\r\n\r\n    return total;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const positiveFeedback = Math.round(\r\n      (this.state.good / this.countTotalFeedback()) * 100\r\n    );\r\n    return positiveFeedback;\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    return (\r\n      <div>\r\n        <Section title={\"Please leave feedback\"}>\r\n          <FeedbackOptions\r\n            onGoodClick={this.onGoodClick}\r\n            onNeutralClick={this.onNeutralClick}\r\n            onBadClick={this.onBadClick}\r\n          />\r\n        </Section>\r\n        {this.countTotalFeedback() > 0 ? (\r\n          <Section title={\"Statistics\"}>\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={this.countTotalFeedback()}\r\n              positiveFeedback={\r\n                this.countPositiveFeedbackPercentage() > 0\r\n                  ? this.countPositiveFeedbackPercentage() + \"%\"\r\n                  : \"\"\r\n              }\r\n            />\r\n          </Section>\r\n        ) : (\r\n          <Notification message={\"There is no feedback\"} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Feedback;\r\n","import Feedback from \"./Feedback/Feedback.js\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div>\n      <Feedback />\n    </div>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}